---
# ---
# Cluster API provider options
core: {}
# cluster-api: {}         # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     featureGates:
#       ClusterTopology: true
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
bootstrap: {}
# kubeadm: {}             # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
controlPlane: {}
# kubeadm: {}             # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     featureGates:
#       ClusterTopology: true
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
infrastructure: {}
# docker: {}              # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     featureGates:
#       ClusterTopology: true
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
addon: {}
# helm: {}                # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
ipam: {}
# in-cluster: {}          # Name, required
#   namespace: ""         # Optional
#   version: ""           # Optional
#   createNamespace: true # Optional
#   manager:              # Optional
#     featureGates:
#       ClusterTopology: true
#     metrics:
#       insecureDiagnostics: true
#       diagnosticsAddress: localhost:8080
fetchConfig: {}
# ---
# Common configuration secret options
configSecret: {}
# ---
# CAPI operator deployment options
logLevel: 2
replicaCount: 1
leaderElection:
  enabled: true
image:
  manager:
    repository: gcr.io/k8s-staging-capi-operator/cluster-api-operator
    tag: dev
    pullPolicy: IfNotPresent
env:
  manager: []
diagnosticsAddress: ":8443"
healthAddr: ":9440"
profilerAddress: ":6060"
contentionProfiling: false
insecureDiagnostics: false
watchConfigSecret: false
watchConfigMap: false
imagePullSecrets: {}
resources:
  manager:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 100Mi
containerSecurityContext: {}
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
                - ppc64le
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
volumes:
  - name: cert
    secret:
      defaultMode: 420
      secretName: capi-operator-webhook-service-cert
volumeMounts:
  manager:
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: cert
      readOnly: true
enableHelmHook: true
