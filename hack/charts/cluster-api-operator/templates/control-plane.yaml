# Control plane provider
{{- range $name, $controlPlane := $.Values.controlPlane }}
  {{- $controlPlaneNamespace := default ( printf "%s-%s" $name "control-plane-system" ) (get $controlPlane "namespace") }}
  {{- $controlPlaneName := $name }}
  {{- $controlPlaneVersion := get $controlPlane "version" }}
{{- if ne $controlPlane.createNamespace false }}
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    {{- if $.Values.enableHelmHook }}
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "1"
    {{- end }}
    "argocd.argoproj.io/sync-wave": "1"
  name: {{ $controlPlaneNamespace }}
{{- end }}
---
apiVersion: operator.cluster.x-k8s.io/v1alpha2
kind: ControlPlaneProvider
metadata:
  name: {{ $controlPlaneName }}
  namespace: {{ $controlPlaneNamespace }}
  annotations:
    {{- if $.Values.enableHelmHook }}
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "2"
    {{- end }}
    "argocd.argoproj.io/sync-wave": "2"
{{- if or $controlPlaneVersion $.Values.configSecret.name $controlPlane.manager (($controlPlane).configSecret).name }}
spec:
{{- end}}
{{- if $controlPlaneVersion }}
  version: {{ $controlPlaneVersion }}
{{- end }}
{{- if $controlPlane.manager }}
  manager:
  {{- if $controlPlane.manager.featureGates }}
    featureGates:
    {{- range $key, $value := $controlPlane.manager.featureGates }}
      {{ $key }}: {{ $value }}
    {{- end }}
  {{- end }}
  {{- if $controlPlane.manager.metrics }}
    metrics:
    {{- if $controlPlane.manager.metrics.insecureDiagnostics }}
      insecureDiagnostics: {{- $controlPlane.manager.metrics.insecureDiagnostics }}
    {{- end }}
    {{- if $controlPlane.manager.metrics.diagnosticsAddress }}
      diagnosticsAddress: {{- $controlPlane.manager.metrics.diagnosticsAddress }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if (default (($controlPlane).configSecret).name (($.Values).configSecret).name) }}
{{- include "capi-operator.configSecret" (dict "ROOT" $ "ARGUMENT" $controlPlane) | nindent 2 }}
{{- end }}
{{- if $controlPlane.manifestPatches }}
  manifestPatches: {{ toYaml $controlPlane.manifestPatches | nindent 4 }}
{{- end }}
{{- if $controlPlane.fetchConfig }}
  fetchConfig: {{ toYaml $controlPlane.fetchConfig | nindent 4 }}
{{- end }}
{{- if $controlPlane.additionalManifests }}
  additionalManifests:
    name: {{ $controlPlane.additionalManifests.name }}
    {{- if $controlPlane.additionalManifests.namespace }}
    namespace: {{ $controlPlane.additionalManifests.namespace }}
    {{- end }} {{/* if $controlPlane.additionalManifests.namespace */}}
{{- end }}
{{- if $controlPlane.additionalManifests }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $controlPlane.additionalManifests.name }}
  namespace: {{ default $controlPlaneNamespace $controlPlane.additionalManifests.namespace }}
data:
  manifests: {{- toYaml $controlPlane.additionalManifests.manifests | nindent 4 }}
{{- end }}
{{- end }} {{/* range $name, $controlPlane := .Values.controlPlane */}}
